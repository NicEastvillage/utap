name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Format
      run: find src include test -iregex '.*\.\(c\|h\|cpp\|hpp\|cc\|hh\|cxx\|hxx\)$' | xargs clang-format -n -Werror
  build-nix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v15
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Build and test
      run: nix build
  build-nix-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v15
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Build and test
      run: nix build
  build-nix-cross:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v15
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Build and test
      run: nix build .\#utapWindows.x86_64-linux
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        asan: [ON, OFF]
        ubsan: [ON, OFF]
        exclude:
          - asan: ON
            ubsan: ON
    runs-on: ubuntu-latest
    container: ubuntu:22.04
    steps:
    - uses: actions/checkout@v2
    - name: Set default environment variables
      run: echo "STATIC=OFF" >> "$GITHUB_ENV"
    - name: Get universal dependencies
      run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get -q -y update
          apt-get -q -y install bison curl wget unzip cmake ninja-build flex libc6-dev g++-10
          ./getlibs/getlibs.sh linux64
    - name: Build and test
      run: |
          export CTEST_OUTPUT_ON_FAILURE=1
          cmake -DCMAKE_TOOLCHAIN_FILE=$PWD/toolchain/linux64.cmake -DCMAKE_PREFIX_PATH=$PWD/local/linux64 -DCMAKE_BUILD_TYPE=Release -DSTATIC=$STATIC -DASAN=${{ matrix.asan }} -DUBSAN=${{ matrix.ubsan }} -DTESTING=ON -B build -S . -G Ninja
          cmake --build build
          ctest --test-dir build
